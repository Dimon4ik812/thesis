#version: "3.3"

services:
  db:
    image: postgres:16-alpine
    restart: on-failure
    env_file:
      - .env
    volumes:
      - pg_data:/var/lib/postgresql/data

  redis:
    image: redis:latest
    restart: on-failure

  app:
    build:
      context: .
      dockerfile: Dockerfile  # Указываем на Dockerfile для Python
    command: gunicorn --bind 0.0.0.0:8000 config.wsgi:application
    volumes:
      - .:/app
      - static_volume:/app/static  # Добавлено для монтирования статических файлов
      - media_volume:/app/media    # Добавлено для монтирования медиа файлов
    depends_on:
      - db

  celery:
    build:
      context: .
      dockerfile: Dockerfile  # Указываем на тот же Dockerfile
    command: celery -A config worker --loglevel=info
    depends_on:
      - redis
      - db
      - app

  celery_beat:
    build:
      context: .
      dockerfile: Dockerfile  # Указываем на тот же Dockerfile
    command: celery -A config beat --loglevel=info
    depends_on:
      - redis
      - db
      - app

  nginx:
    build:
      context: ./nginx  # Указываем на директорию с Dockerfile для Nginx
      dockerfile: Dockerfile  # Указываем, что мы хотим использовать этот Dockerfile
    ports:
      - "80:80"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./nginx/html:/usr/share/nginx/html
      - static_volume:/app/static  # Добавлено для доступа к статическим файлам
      - media_volume:/app/media

volumes:
  pg_data:
  static_volume: # Добавлено для хранения статических файлов
  media_volume:   # Добавлено для хранения медиа файлов